knitr::opts_chunk$set(echo = TRUE)
library(jsonlite)
library(tidyr)
library(stringr)
library(dplyr)
## load datafiles and put in a data frame
d.raw <- data.frame()
# function for shorter filename extraction
getCondition <- function(fileName){
out=strsplit(as.character(fileName),"/")[[1]][9]
}
imageNameShort <- function(fileName){
out=strsplit(as.character(fileName),"/")[[1]][10]
}
getAge <- function(imageNameShort){
age=strsplit(imageNameShort,"_")[[1]][7]
out = as.numeric(strsplit(age,"")[[1]][4])
}
getCategory <- function(imageNameShort){
out=strsplit(imageNameShort,"_")[[1]][1]
}
getSessionId <- function(imageNameShort){
out=(strsplit(imageNameShort,"_")[[1]][5])
}
files <- dir("production-results/")
for (f in files) {
jf <- paste("production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
rating = jd$answers$data$rating,
imageName = jd$answers$data$imageName)
d.raw <- bind_rows(d.raw, id)
}
## get rid of weird characters where filename had spaces
d.raw$imageName <- str_replace_all(d.raw$imageName,"%20"," ")
# prettify data: make shorter iamge names for plots, etc.
d.pretty <- d.raw %>%
group_by(imageName) %>%
mutate(condition = getCondition(imageName)) %>%
mutate(imNameShort = imageNameShort(imageName)) %>%
mutate(category = getCategory(imNameShort)) %>%
mutate(age = getAge(imNameShort)) %>%
mutate(sessionId = getSessionId(imNameShort)) %>%
mutate(correct = (rating == category))
write.table(d.pretty, "./recognition_sanity_check.csv", sep=",",col.names=NA)
library(knitr)
opts_chunk$set(echo = TRUE)
library(tidyverse)
library(assertthat)
library(ggthemes)
library(lme4)
library(langcog)
library(forcats)
theme_set(theme_few())
## Read in data outputs from python - stroke numbers, intensity, bounding boc, etc.
# get rid of drwaings without age - these were when we were testing the interface.
# make new variable name with image name for joining with recognition data
## Read in data outputs from turk data - true/false recognition with 21AFC
r <- read.csv("recognition_sanity_check.csv") %>%
as.tibble()
## check we have the right lengths
assert_that(length(d$session_id)==length(unique(r$imageName)))
## Read in data outputs from python - stroke numbers, intensity, bounding boc, etc.
# get rid of drwaings without age - these were when we were testing the interface.
# make new variable name with image name for joining with recognition data
## Read in data outputs from turk data - true/false recognition with 21AFC
r <- read.csv("recognition_sanity_check.csv") %>%
as.tibble()
ratingConfusions <- r %>%
group_by(category, rating)  %>%
summarize(number = n()) %>%
group_by(category) %>%
mutate(prop = number / sum(number)) %>%
complete(rating, fill = list(prop = 0))
ggplot(ratingConfusions,
aes(x = rating, y = category, fill = prop)) +
geom_tile() +
ylab("True Category") +
xlab("Rated as") +
scale_fill_gradient(limits = c(0, 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
r
r$condition
# add special column for when people selected "can't tell at all" during ratings; not separated out in current analyses
r$cantTell=(r$rating=="cannott tell at all")
## Get the percent recognized for each drawing
corbyCondition <- r %>%
group_by(condition) %>%
summarize(meanCorrect = mean(correct),
# add special column for when people selected "can't tell at all" during ratings; not separated out in current analyses
r$cantTell=(r$rating=="cannott tell at all")
## Get the percent recognized for each drawing
corbyCondition <- r %>%
group_by(condition) %>%
summarize(meanCorrect = mean(correct))
corbyCondition
# add special column for when people selected "can't tell at all" during ratings; not separated out in current analyses
r$cantTell=(r$rating=="cannott tell at all")
## Get the percent recognized for each drawing
corbyCondition <- r %>%
group_by(condition,age) %>%
summarize(meanCorrect = mean(correct))
corbyCondition
# add special column for when people selected "can't tell at all" during ratings; not separated out in current analyses
r$cantTell=(r$rating=="cannott tell at all")
r$cantTell=(r$rating=="other")
## Get the percent recognized for each drawing
corbyCondition <- r %>%
group_by(condition,age) %>%
summarize(meanCorrect = mean(correct))
corbyCondition
joint %>%
group_by(category) %>%
summarize(count = n()) %>%
kable()
r %>%
group_by(category) %>%
summarize(count = n()) %>%
kable()
r
# add special column for when people selected "can't tell at all" during ratings; not separated out in current analyses
r$cantTell=(r$rating=="cannott tell at all")
r$cantTell=(r$rating=="other")
## Get the percent recognized for each drawing
corbyCondition <- r %>%
group_by(condition,age) %>%
summarize(meanCorrect = mean(correct))
corbyworker <- r %>%
group_by(workerid) %>%
summarize(meanCorrect = mean(correct))
# add special column for when people selected "can't tell at all" during ratings; not separated out in current analyses
r$cantTell=(r$rating=="cannott tell at all")
r$cantTell=(r$rating=="other")
## Get the percent recognized for each drawing
corbyCondition <- r %>%
group_by(condition,age) %>%
summarize(meanCorrect = mean(correct))
corbyworker <- r %>%
group_by(workerid) %>%
summarize(meanCorrect = mean(correct))
corbyworker
