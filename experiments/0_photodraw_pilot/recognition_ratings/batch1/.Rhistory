p2=ggplot(detectionsByOrientation, aes(x = factor(age.grp), y = detections, col = orientation)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
theme_few() +
theme(legend.position="none") +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
ggarrange(p1, p2)
fig5=ggarrange(p1, p2)
ggsave("Fig5-DetbyOrientation.png", width = 10, height = 8,unit =  "in", plot = fig5, path="./figs/", device = "png",dpi = 300)
dlongPlot <-dlong %>%
filter(detectorType!="OpenPose-Faces") %>%
filter(detectorType!="ViolaJones-Faces")
detectionsByPosture <- dlongPlot %>%
filter(!is.na(posture)) %>%
group_by(age.grp, posture, subid,detectorType) %>%
summarise(face = mean(detection)) %>%
group_by(age.grp)
p1=ggplot(detectionsByPosture, aes(x = factor(age.grp), y = face, col = posture)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
theme_few() +
theme(legend.position="none") +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
detectionsByOrientation <- dlongPlot %>%
filter(!is.na(orientation)) %>%
group_by(age.grp, orientation, subid,detectorType) %>%
summarise(detections = mean(detection)) %>%
group_by(age.grp)
p2=ggplot(detectionsByOrientation, aes(x = factor(age.grp), y = detections, col = orientation)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
theme_few() +
theme(legend.position="none") +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
ggarrange(p1, p2)
fig5=ggarrange(p1, p2)
ggsave("Fig5-DetbyOrientation.png", width = 10, height = 8,unit =  "in", plot = fig5, path="./figs/", device = "png",dpi = 300)
dlongPlot <-dlong %>%
filter(detectorType!="OpenPose-Faces") %>%
filter(detectorType!="ViolaJones-Faces")
detectionsByPosture <- dlongPlot %>%
filter(!is.na(posture)) %>%
group_by(age.grp, posture, subid,detectorType) %>%
summarise(face = mean(detection)) %>%
group_by(age.grp)
p1=ggplot(detectionsByPosture, aes(x = factor(age.grp), y = face, col = posture)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
theme_few() +
theme(legend.position="none") +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
detectionsByOrientation <- dlongPlot %>%
filter(!is.na(orientation)) %>%
group_by(age.grp, orientation, subid,detectorType) %>%
summarise(detections = mean(detection)) %>%
group_by(age.grp)
p2=ggplot(detectionsByOrientation, aes(x = factor(age.grp), y = detections, col = orientation)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
theme_few() +
theme(legend.position="none") +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
ggarrange(p1, p2)
fig5=ggarrange(p1, p2)
ggsave("Fig5-DetbyOrientation.png", width = 5, height = 8,unit =  "in", plot = fig5, path="./figs/", device = "png",dpi = 300)
dlongPlot <-dlong %>%
filter(detectorType!="OpenPose-Faces") %>%
filter(detectorType!="ViolaJones-Faces")
detectionsByPosture <- dlongPlot %>%
filter(!is.na(posture)) %>%
group_by(age.grp, posture, subid,detectorType) %>%
summarise(face = mean(detection)) %>%
group_by(age.grp)
p1=ggplot(detectionsByPosture, aes(x = factor(age.grp), y = face, col = posture)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
theme_few() +
theme(legend.position="none") +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
detectionsByOrientation <- dlongPlot %>%
filter(!is.na(orientation)) %>%
group_by(age.grp, orientation, subid,detectorType) %>%
summarise(detections = mean(detection)) %>%
group_by(age.grp)
p2=ggplot(detectionsByOrientation, aes(x = factor(age.grp), y = detections, col = orientation)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
theme_few() +
theme(legend.position="none") +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
ggarrange(p1, p2)
fig5=ggarrange(p1, p2)
ggsave("Fig5-DetbyOrientation.png", width = 5, height = 6,unit =  "in", plot = fig5, path="./figs/", device = "png",dpi = 300)
dlongPlot <-dlong %>%
filter(detectorType!="OpenPose-Faces") %>%
filter(detectorType!="ViolaJones-Faces")
detectionsByPosture <- dlongPlot %>%
filter(!is.na(posture)) %>%
group_by(age.grp, posture, subid,detectorType) %>%
summarise(face = mean(detection)) %>%
group_by(age.grp)
p1=ggplot(detectionsByPosture, aes(x = factor(age.grp), y = face, col = posture)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
theme_few() +
theme(legend.position="none") +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
detectionsByOrientation <- dlongPlot %>%
filter(!is.na(orientation)) %>%
group_by(age.grp, orientation, subid,detectorType) %>%
summarise(detections = mean(detection)) %>%
group_by(age.grp)
p2=ggplot(detectionsByOrientation, aes(x = factor(age.grp), y = detections, col = orientation)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
theme_few() +
theme(legend.position="none") +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
ggarrange(p1, p2)
fig5=ggarrange(p1, p2)
ggsave("Fig5-DetbyOrientation.png", width = 4, height = 2.5,unit =  "in", plot = fig5, path="./figs/", device = "png",dpi = 300)
dlongPlot <-dlong %>%
filter(detectorType!="OpenPose-Faces") %>%
filter(detectorType!="ViolaJones-Faces")
detectionsByPosture <- dlongPlot %>%
filter(!is.na(posture)) %>%
group_by(age.grp, posture, subid,detectorType) %>%
summarise(face = mean(detection)) %>%
group_by(age.grp)
p1=ggplot(detectionsByPosture, aes(x = factor(age.grp), y = face, col = posture)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
theme_few() +
theme(legend.position="none") +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
detectionsByOrientation <- dlongPlot %>%
filter(!is.na(orientation)) %>%
group_by(age.grp, orientation, subid,detectorType) %>%
summarise(detections = mean(detection)) %>%
group_by(age.grp)
p2=ggplot(detectionsByOrientation, aes(x = factor(age.grp), y = detections, col = orientation)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
theme_few() +
theme(legend.position="none") +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
ggarrange(p1, p2)
fig5=ggarrange(p1, p2)
ggsave("Fig5-DetbyOrientation.png", width = 5, height = 3,unit =  "in", plot = fig5, path="./figs/", device = "png",dpi = 300)
dlongPlot <-dlong %>%
filter(detectorType!="OpenPose-Faces") %>%
filter(detectorType!="ViolaJones-Faces")
detectionsByPosture <- dlongPlot %>%
filter(!is.na(posture)) %>%
group_by(age.grp, posture, subid,detectorType) %>%
summarise(face = mean(detection)) %>%
group_by(age.grp)
p1=ggplot(detectionsByPosture, aes(x = factor(age.grp), y = face, col = posture)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
theme_few() +
theme(legend.position="none") +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
detectionsByOrientation <- dlongPlot %>%
filter(!is.na(orientation)) %>%
group_by(age.grp, orientation, subid,detectorType) %>%
summarise(detections = mean(detection)) %>%
group_by(age.grp)
p2=ggplot(detectionsByOrientation, aes(x = factor(age.grp), y = detections, col = orientation)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
theme_few() +
theme(legend.position="none") +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
ggarrange(p1, p2)
fig5=ggarrange(p1, p2)
ggsave("Fig5-DetbyOrientation.png", width = 5, height = 4,unit =  "in", plot = fig5, path="./figs/", device = "png",dpi = 300)
dlongPlot <-dlong %>%
filter(detectorType!="OpenPose-Faces") %>%
filter(detectorType!="ViolaJones-Faces")
detectionsByPosture <- dlongPlot %>%
filter(!is.na(posture)) %>%
group_by(age.grp, posture, subid,detectorType) %>%
summarise(face = mean(detection)) %>%
group_by(age.grp)
p1=ggplot(detectionsByPosture, aes(x = factor(age.grp), y = face, col = posture)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
theme_few() +
theme(legend.position="none") +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
detectionsByOrientation <- dlongPlot %>%
filter(!is.na(orientation)) %>%
group_by(age.grp, orientation, subid,detectorType) %>%
summarise(detections = mean(detection)) %>%
group_by(age.grp)
p2=ggplot(detectionsByOrientation, aes(x = factor(age.grp), y = detections, col = orientation)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
theme_few() +
theme(legend.position="none") +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
ggarrange(p1, p2)
fig5=ggarrange(p1, p2)
ggsave("Fig5-DetbyOrientation.png", width = 4, height = 4,unit =  "in", plot = fig5, path="./figs/", device = "png",dpi = 300)
dlongPlot <-dlong %>%
filter(detectorType!="OpenPose-Faces") %>%
filter(detectorType!="ViolaJones-Faces")
detectionsByPosture <- dlongPlot %>%
filter(!is.na(posture)) %>%
group_by(age.grp, posture, subid,detectorType) %>%
summarise(face = mean(detection)) %>%
group_by(age.grp)
p1=ggplot(detectionsByPosture, aes(x = factor(age.grp), y = face, col = posture)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
theme_few() +
theme(legend.position="none") +
theme(axis.ticks = element_blank()) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
detectionsByOrientation <- dlongPlot %>%
filter(!is.na(orientation)) %>%
group_by(age.grp, orientation, subid,detectorType) %>%
summarise(detections = mean(detection)) %>%
group_by(age.grp)
p2=ggplot(detectionsByOrientation, aes(x = factor(age.grp), y = detections, col = orientation)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
theme_few() +
theme(axis.ticks = element_blank()) +
theme(legend.position="none") +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
ggarrange(p1, p2)
fig5=ggarrange(p1, p2)
ggsave("Fig5-DetbyOrientation.png", width = 4, height = 4,unit =  "in", plot = fig5, path="./figs/", device = "png",dpi = 300)
dlongPlot <-dlong %>%
filter(detectorType!="OpenPose-Faces") %>%
filter(detectorType!="ViolaJones-Faces")
detectionsByPosture <- dlongPlot %>%
filter(!is.na(posture)) %>%
group_by(age.grp, posture, subid,detectorType) %>%
summarise(face = mean(detection)) %>%
group_by(age.grp)
p1=ggplot(detectionsByPosture, aes(x = factor(age.grp), y = face, col = posture)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
theme_few() +
theme(legend.position="none") +
theme(axis.ticks = element_blank()) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
detectionsByOrientation <- dlongPlot %>%
filter(!is.na(orientation)) %>%
group_by(age.grp, orientation, subid,detectorType) %>%
summarise(detections = mean(detection)) %>%
group_by(age.grp)
p2=ggplot(detectionsByOrientation, aes(x = factor(age.grp), y = detections, col = orientation)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
theme_few() +
theme(axis.ticks = element_blank()) +
theme(legend.position="none") +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
ggarrange(p1, p2)
fig5=ggarrange(p1, p2)
ggsave("Fig5-DetbyOrientation.png", width = 6, height = 6,unit =  "in", plot = fig5, path="./figs/", device = "png",dpi = 300)
dlongPlot <-dlong %>%
filter(detectorType!="OpenPose-Faces") %>%
filter(detectorType!="ViolaJones-Faces")
detectionsByPosture <- dlongPlot %>%
filter(!is.na(posture)) %>%
group_by(age.grp, posture, subid,detectorType) %>%
summarise(face = mean(detection)) %>%
group_by(age.grp)
p1=ggplot(detectionsByPosture, aes(x = factor(age.grp), y = face, col = posture)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
theme_few() +
theme(legend.position="none") +
theme(axis.ticks = element_blank()) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
detectionsByOrientation <- dlongPlot %>%
filter(!is.na(orientation)) %>%
group_by(age.grp, orientation, subid,detectorType) %>%
summarise(detections = mean(detection)) %>%
group_by(age.grp)
p2=ggplot(detectionsByOrientation, aes(x = factor(age.grp), y = detections, col = orientation)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
theme_few() +
theme(axis.ticks = element_blank()) +
theme(legend.position="none") +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
ggarrange(p1, p2)
fig5=ggarrange(p1, p2)
ggsave("Fig5-DetbyOrientation.png", width = 5, height = 5,unit =  "in", plot = fig5, path="./figs/", device = "png",dpi = 300)
dlongPlot <-dlong %>%
filter(detectorType!="OpenPose-Faces") %>%
filter(detectorType!="ViolaJones-Faces")
detectionsByPosture <- dlongPlot %>%
filter(!is.na(posture)) %>%
group_by(age.grp, posture, subid,detectorType) %>%
summarise(face = mean(detection)) %>%
group_by(age.grp)
p1=ggplot(detectionsByPosture, aes(x = factor(age.grp), y = face, col = posture)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
theme_few() +
theme(legend.position="none") +
theme(axis.ticks = element_blank()) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
detectionsByOrientation <- dlongPlot %>%
filter(!is.na(orientation)) %>%
group_by(age.grp, orientation, subid,detectorType) %>%
summarise(detections = mean(detection)) %>%
group_by(age.grp)
p2=ggplot(detectionsByOrientation, aes(x = factor(age.grp), y = detections, col = orientation)) +
geom_boxplot(outlier.size = 0.5) +
labs(y = "Prop. detected", x = element_blank()) +
facet_grid(~detectorType) +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
theme_few() +
theme(axis.ticks = element_blank()) +
theme(legend.position="none") +
scale_y_continuous(breaks=seq(0,.60,.20), limits=c(0, .6))
ggarrange(p1, p2)
fig5=ggarrange(p1, p2)
ggsave("Fig5-DetbyOrientation.png", width = 5, height = 5,unit =  "in", plot = fig5, path="./figs/", device = "png",dpi = 600)
ggsave("Fig5-DetbyOrientation.pdf", width = 5, height = 5,unit =  "in", plot = fig5, path="./figs/", device = "pdf",dpi = 300)
detectionsByAge <- dlong %>%
filter(detectorType!="OpenPose-Faces") %>% # for brevity
filter(detectorType!="ViolaJones-Faces") %>% # low performance
filter(!is.na(age.at.test)) %>%
group_by(subid, age.at.test, detectorType) %>%
summarise(detections = mean(detection)) %>%
left_join(inc_subs) %>%
mutate(len = as.numeric(len.min)) ## allows us to scale dots by length of video
fig4=ggplot(detectionsByAge, aes(x = age.at.test, y = detections, color = detectorType, size=len.min)) +
theme_few() +
geom_jitter(width = .25) +
geom_smooth(size=1) +
scale_x_continuous(breaks=c(8,12,16), labels=c("8 m.", "12 m.", "16 m.")) +
scale_size_continuous(range=c(.01,2),name = "Video Length (mins)") +
scale_colour_grey(start=.2, end=.6) +
theme(axis.ticks = element_blank()) +
labs(y = "Prop. detected", x = element_blank()) +
theme(legend.position="none") +
facet_wrap(~detectorType, ncol=1)
ggsave("Fig4-DetbyAge.png", width = 2.5, height = 4,unit =  "in", plot = fig4, path="./figs/", device = "png",dpi = 300)
ggsave("Fig4-DetbyAge.pdf", width = 2.5, height = 4,unit =  "in", plot = fig4, path="./figs/", device = "pdf",dpi = 300)
p1=ggplot(posture, aes(x = factor(age.grp), y = prop.time, col = posture)) +
geom_boxplot() +
ylab("Proportion Time") +
xlab("") +
theme_few() +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
theme(axis.ticks = element_blank()) +
theme(legend.position="none")
p2=ggplot(orientation, aes(x = factor(age.grp), y = prop.time, col = orientation)) +
geom_boxplot() +
ylab("Proportion Time") +
xlab("") +
theme_few() +
scale_x_discrete( labels=c("8 m.", "12 m.", "16 m.")) +
theme(axis.ticks = element_blank()) +
theme(legend.position="none")
ggarrange(p1,p2, nrow=1)
fig1=ggarrange(p1,p2, ncol=1)
ggsave("Fig3-TimebyPos.png", width = 2.5, height = 4,unit =  "in", plot = fig1, path="./figs/", device = "png",dpi = 300)
ggsave("Fig3-TimebyPos.pdf", width = 2.5, height = 4,unit =  "in", plot = fig1, path="./figs/", device = "pdf",dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
library(jsonlite)
library(tidyr)
library(stringr)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(jsonlite)
library(tidyr)
library(stringr)
library(dplyr)
files <- dir("sandbox-results")
files
ls
setwd("~/Documents/GitHub/kiddraw/experiments/photodraw/recognition_ratings/batch1")
files <- dir("sandbox-results")
files
f
f
files
f=files[1]
f
jf <- paste("sandbox-results/",f,sep="")
jf
jd <- fromJSON(paste(readLines(jf), collapse=""))
jd
files <- dir("sandbox-results")
raw_data <- data_frame()
for (f in files) {
jf <- paste("sandbox-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- as_data_frame(jd$answers$data$data) %>%
mutate(workerid = jd$WorkerId, rating = jd$answers$data$rating, imageName = jd$answers$data$imageName)
raw_data <- bind_rows(raw_data, id)
}
jd
jd$WorkerId
## load datafiles and put in a data frame
files <- dir("../sandbox-results/")
d.raw <- data.frame()
# function for shorter filename extraction
getCategory <- function(fileName){
out=strsplit(as.character(fileName),"/")[[1]][8]
}
imageNameShort <- function(fileName){
out=strsplit(as.character(fileName),"/")[[1]][9]
}
getAge <- function(imageNameShort){
out=as.numeric(strsplit(imageNameShort,"_")[[1]][3])
}
getSessionId <- function(imageNameShort){
out=(strsplit(imageNameShort,"_")[[1]][5])
}
getAge
for (f in files) {
jf <- paste("../sandbox-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
rating = jd$answers$data$rating,
imageName = jd$answers$data$imageName)
d.raw <- bind_rows(d.raw, id)
}
imageName
d.raw
files
## load datafiles and put in a data frame
files <- dir("sandbox-results/")
d.raw <- data.frame()
# function for shorter filename extraction
getCategory <- function(fileName){
out=strsplit(as.character(fileName),"/")[[1]][8]
}
imageNameShort <- function(fileName){
out=strsplit(as.character(fileName),"/")[[1]][9]
}
getAge <- function(imageNameShort){
out=as.numeric(strsplit(imageNameShort,"_")[[1]][3])
}
getSessionId <- function(imageNameShort){
out=(strsplit(imageNameShort,"_")[[1]][5])
}
for (f in files) {
jf <- paste("sandbox-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
rating = jd$answers$data$rating,
imageName = jd$answers$data$imageName)
d.raw <- bind_rows(d.raw, id)
}
d.raw
d.raw$imageName
d.raw$imageName[1]
getCategory(d.raw$imageName[1])
test = getCategory(d.raw$imageName[1])
test
imageNameShort(d.raw$imageName[1])
test = imageNameShort(d.raw$imageName[1])
test
filenametest = d.raw$imageName[1]
filenametest
strsplit(as.character(filenametest),"/")
