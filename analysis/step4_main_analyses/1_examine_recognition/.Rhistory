labs(x='Age', y='Draw duration (s)') +
# scale_color_viridis(option="D") +
theme(legend.position = "none") +
ylim(0,20)
# geom_smooth(col='grey', span = 10) +
# ggtitle('B')
p2=ggplot(avg_intensity, aes(age_numeric,mean, color=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.5)) +
theme_few(base_size = base_size_chosen) +
labs(x='Age', y='Ink used (mean intensity)') +
# scale_color_viridis(option="D") +
theme(legend.position = "none") +
ylim(.02,.08)
# geom_smooth(col='grey', span = 10,alpha=smooth_alpha)  +
# ggtitle('C')
p3=ggplot(num_strokes, aes(age_numeric,mean, color=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.5)) +
theme_few(base_size = base_size_chosen) +
labs(x='Age', y='Number of strokes') +
# scale_color_viridis(option="D") +
theme(legend.position = "none") +
ylim(0,15)
# geom_smooth(col='grey', span = 10,alpha=smooth_alpha)  +
# ggtitle('D')
p4=ggplot(tracing_scores, aes(age_numeric,mean, color=age_numeric)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper)) +
theme_few(base_size = base_size_chosen) +
labs(x='Age', y='Tracing score') +
scale_color_viridis(option="D") +
theme(legend.position = "none") +
ylim(1,5)
# ggtitle('E')
ggarrange(cor_by_age_plot_A,p1,p2,p3,p4, nrow = 1)
library(knitr)
opts_chunk$set(echo = TRUE)
library(tidyverse)
library(assertthat)
library(ggthemes)
library(lme4)
library(langcog)
library(lmerTest)
library(viridis)
library(jsonlite)
library(egg)
theme_set(theme_few())
d.raw <- data.frame()
files <- dir("raw_recognition_data/")
for (f in files) {
jf <- paste("raw_recognition_data/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
guessed_category = jd$answers$data$rating,
actual_category = jd$answers$data$this_sketch_category,
subID = jd$answers$data$drawing_session_id,
condition = jd$answers$data$condition,
this_sketch_name = jd$answers$data$this_sketch_name,
age = jd$answers$data$producer_age,
photo_cue = jd$answers$data$photo_cue,
chunk = jd$answers$data$chunk,
trial_number =jd$answers$data$chunk
)
d.raw <- bind_rows(d.raw, id)
}
raters_per_chunk <- d.raw %>%
distinct(workerid, chunk) %>%
group_by(chunk) %>%
summarize(count = n())
raters_per_image <- d.raw %>%
distinct(this_sketch_name, workerid) %>%
group_by(this_sketch_name) %>%
summarize(count = n())
d <- d.raw
d$guessed_category = as.factor(d$guessed_category)
d$actual_category <- factor(d$actual_category, levels=levels(d$guessed_category))
d <- d %>%
mutate(correct_or_not = (actual_category == guessed_category))
prac_thres = 11/12 ## 12 practice trials -- if you missed more than 1, exclude
# compute who didn't pass this threshold
bad_workers <- d %>%
filter(condition=='practice') %>%
group_by(workerid, chunk) %>%
summarize(avg_prac_correct = mean(correct_or_not)) %>%
filter(avg_prac_correct < prac_thres)
# filter from dataset
d <- d %>%
filter(!workerid %in% bad_workers$workerid)
raters_per_chunk_filtered <- d %>%
distinct(workerid, chunk) %>%
group_by(chunk) %>%
summarize(count = n())
avg_by_sketch <- d %>%
filter(condition != 'practice') %>%
mutate(sketch_name = str_split_fixed(this_sketch_name, '/',9)[,9]) %>%
mutate(sketch_name = as.factor(sketch_name)) %>%
mutate(correct_or_not = (actual_category == guessed_category)) %>%
group_by(sketch_name,age,condition,actual_category, subID) %>%
summarize(avg_sketch_correct = mean(correct_or_not)) # averages over raters
sketch_descriptives <- read_csv('sketch_descriptives/Photodraw2_SRCD_cleaned_data_4-8.csv') %>%
as.tibble() %>%
mutate(actual_category = as.factor(category)) %>%
mutate(subID = as.factor(subID)) %>%
mutate(condition = as.factor(condition)) %>%
mutate(age = as.factor(age_numeric)) %>%
mutate(sketch_name = str_split_fixed(filename,'/',12)[,12]) %>%
mutate(session_id = str_split_fixed(session_id, '_', 2)[,2]) %>%
mutate(session_id = as.factor(session_id))
joined <- left_join(avg_by_sketch,sketch_descriptives, by =c('sketch_name','subID','age','condition','actual_category'))
## Load tracing data
tracing <- read.csv('tracing_scores/photodraw2_tracing_pred.csv') %>%
mutate(age_numeric = age) %>%
mutate(age = paste0("age",age_numeric)) %>%
mutate(age = as.factor(age))
count_tracers <- read.csv('tracing_scores/photodraw2_tracing_pred.csv') %>%
mutate(age_numeric = age) %>%
mutate(age = paste0("age",age_numeric)) %>%
mutate(age = as.factor(age)) %>%
distinct(session_id,age) %>%
group_by(age) %>%
summarize(count = n())
## Extract relevant statistics
tracing_summary <- tracing %>%
group_by(session_id) %>%
# filter(category == "shape") %>%
summarize(avg_tracing_rating = sum(ord_max)/n()) %>%# use instead of mean because sometimes that errors when we only have one tracing
# mutate(avg_tracing_rating = scale(avg_tracing_rating)) %>%
mutate(session_id = str_split_fixed(session_id, '_', 2)[,2])
## Join into one data frame
joined <- joined %>%
mutate(session_id = as.factor(session_id)) %>%
left_join(tracing_summary, by=c('session_id'))
unique_sketches <- d %>%
filter(condition!='practice') %>%
distinct(this_sketch_name)
assert_that(length(unique_sketches$this_sketch_name)==length(joined$sketch_name))
ratingConfusions <- d %>%
group_by(actual_category, guessed_category)  %>%
summarize(number = n()) %>%
group_by(actual_category) %>%
mutate(prop = number / sum(number)) %>%
complete(guessed_category, fill = list(prop = 0))
## Plot it
ggplot(ratingConfusions,
aes(x = guessed_category, y = actual_category, fill = prop)) +
geom_tile() +
ylab("True Category") +
xlab("Rated as") +
scale_fill_viridis(limits = c(0, .6),option="viridis") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
cond_by_age <- avg_by_sketch %>%
group_by(subID,condition,age) %>% # group at level of individual subjects/conditions
summarize(avg_sub_by_cond_correct = mean(avg_sketch_correct)) %>% # average over sketch recognition accuracies
group_by(age,condition) %>% # group by age/condition
multi_boot_standard(col='avg_sub_by_cond_correct')
ggplot(cond_by_age, aes(x=age, y=mean, col=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.5))
cor_by_age <- joined %>%
group_by(subID,condition,age_numeric) %>%
summarize(avg_cor = mean(avg_sketch_correct)) %>%
group_by(age_numeric,condition) %>%
multi_boot_standard(col = "avg_cor")
joined$draw_duration_new[joined$draw_duration_new>30]=30 ## some weird draw durations > 30 seconds?
draw_duration <- joined %>%
group_by(subID,condition,age_numeric) %>%
summarize(avg_draw_duration = mean(draw_duration_new)) %>%
group_by(age_numeric,condition) %>%
multi_boot_standard(col = "avg_draw_duration")
num_strokes <- joined %>%
group_by(subID,condition,age_numeric) %>%
summarize(avg_num_strokes = mean(num_strokes)) %>%
group_by(age_numeric,condition) %>%
multi_boot_standard(col = "avg_num_strokes")
avg_intensity <- joined %>%
group_by(subID,condition,age_numeric) %>%
summarize(avg_intensity = mean(mean_intensity)) %>%
group_by(age_numeric,condition) %>%
multi_boot_standard(col = "avg_intensity")
tracing_scores <- joined %>%
group_by(subID, avg_tracing_rating) %>%
distinct(subID, avg_tracing_rating,age_numeric) %>%
filter(!is.na(avg_tracing_rating)) %>%
group_by(age_numeric) %>%
multi_boot_standard(col = "avg_tracing_rating")
tracing_visualize <- joined %>%
group_by(subID, avg_tracing_rating) %>%
distinct(subID, avg_tracing_rating,age_numeric)
ggplot(tracing_visualize, aes(x=age_numeric, y=avg_tracing_rating, col=age_numeric)) +
geom_jitter(width=.1, height=.1, alpha=.4) +
scale_color_viridis()
## Make compiled plot of descriptives
base_size_chosen=18 # size of text in plots
smooth_alpha=.2
cor_by_age_plot_A = ggplot(cor_by_age, aes(age_numeric,mean, color=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.5)) +
theme_few(base_size = base_size_chosen) +
labs(x='Age', y='Average adult recognition') +
# scale_color_viridis(option="D") +
theme(legend.position = "none") +
# geom_smooth(col='grey',span=10, alpha=smooth_alpha) +
# ggtitle('A') +
ylim(0,1) +
geom_hline(yintercept = 1/49, linetype="dashed", color="grey")
p1=ggplot(draw_duration, aes(age_numeric,mean, color=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.5)) +
theme_few(base_size = base_size_chosen) +
labs(x='Age', y='Draw duration (s)') +
# scale_color_viridis(option="D") +
theme(legend.position = "none") +
ylim(0,20)
# geom_smooth(col='grey', span = 10) +
# ggtitle('B')
p2=ggplot(avg_intensity, aes(age_numeric,mean, color=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.5)) +
theme_few(base_size = base_size_chosen) +
labs(x='Age', y='Ink used (mean intensity)') +
# scale_color_viridis(option="D") +
theme(legend.position = "none") +
ylim(.02,.08)
# geom_smooth(col='grey', span = 10,alpha=smooth_alpha)  +
# ggtitle('C')
p3=ggplot(num_strokes, aes(age_numeric,mean, color=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.5)) +
theme_few(base_size = base_size_chosen) +
labs(x='Age', y='Number of strokes') +
# scale_color_viridis(option="D") +
theme(legend.position = "none") +
ylim(0,15)
# geom_smooth(col='grey', span = 10,alpha=smooth_alpha)  +
# ggtitle('D')
p4=ggplot(tracing_scores, aes(age_numeric,mean, color=age_numeric)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper)) +
theme_few(base_size = base_size_chosen) +
labs(x='Age', y='Tracing score') +
scale_color_viridis(option="D") +
theme(legend.position = "none") +
ylim(1,5)
# ggtitle('E')
ggarrange(cor_by_age_plot_A,p1,p2,p3,p4, nrow = 1)
## Compute target_label_prob averages within quantiles / age
num_quantiles = 5
# compute quantiles without knowing about age
joined$avg_tracing_rating_quantile = ntile(joined$avg_tracing_rating,num_quantiles)
# now compute averages
avg_by_tracing <- joined %>%
filter(!is.na(avg_tracing_rating_quantile)) %>%
group_by(avg_tracing_rating_quantile,age_numeric) %>%
multi_boot_standard(col = "avg_sketch_correct")
avg_by_tracing$avg_tracing_rating_quantile = as.factor(avg_by_tracing$avg_tracing_rating_quantile)
# levels(avg_by_tracing$avg_tracing_rating_quantile)=c("Tracing Quartile 1","Tracing Quartile 2","Tracing Quartile 3","Tracing Quartile 4")
ggplot(avg_by_tracing, aes(age_numeric,mean, color=avg_tracing_rating_quantile)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper,alpha=.2)) +
theme_few(base_size = base_size_chosen) +
labs(x='Age', y='Proportion correct') +
theme(legend.position = "none") +
geom_smooth(col='grey', span = 10, method='lm')  +
facet_grid(~avg_tracing_rating_quantile)
ggplot(avg_by_tracing, aes(avg_tracing_rating_quantile,mean, color=avg_tracing_rating_quantile)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper,alpha=.2)) +
theme_few(base_size = base_size_chosen) +
labs(x='Tracing Accuracy', y='Proportion correct') +
theme(legend.position = "none") +
geom_smooth(col='grey', span = 10, method='lm')  +
facet_grid(~age_numeric) +
scale_color_viridis(option='C', discrete=TRUE)
category_by_cond <- joined %>%
group_by(category, age, condition) %>%
multi_boot_standard(col = 'avg_sketch_correct')
ggplot(category_by_cond,aes(x=age, y=mean, col=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.5)) +
facet_wrap(~category)
## Get proportion recognized for each participant
indiv <- joined %>%
group_by(subID) %>%
mutate(sub_correct = mean(avg_sketch_correct)) %>%
distinct(subID, sub_correct, age) %>% # get unique combos of sessionId and average
ungroup() %>%
mutate(subID = fct_reorder(subID, sub_correct, .desc=TRUE))
## Plot individual children ordered from best to worst
ggplot(indiv, aes(x = subID, y = sub_correct, col = age)) +
geom_point() +
theme(axis.text.x = element_blank())+
xlab("Individual children") +
ylab("Proportion Recognized") +
scale_color_viridis(discrete = TRUE) +
geom_hline(yintercept=1/49, col='grey') # plot chance line
## Plot individual children by age
ggplot(indiv, aes(x = age, y = sub_correct, col = age)) +
geom_point() +
xlab("Age") +
ylab("Proportion Recognized") +
scale_color_viridis(discrete=TRUE) +
geom_hline(yintercept=1/22, col='grey') # plot chance line
corbyChild <- joined %>%
group_by(condition,subID, age) %>%
summarize(avgCorrect = mean(avg_sketch_correct)) %>%
group_by(subID,age) %>%
summarize(cond_diff = avgCorrect[condition=='P'] - avgCorrect[condition=='S'])
ggplot(corbyChild, aes(x = age, y = cond_diff, col=age)) +
geom_jitter(width = .01, alpha = .5)  +
scale_color_viridis(discrete=TRUE) +
ylab("P-S")
ggplot(joined, aes(x = num_strokes, y = avg_sketch_correct, col=condition)) +
geom_jitter(width = .1, alpha = .5) +
facet_grid(~age)
ggplot(joined, aes(x = draw_duration_new, y = avg_sketch_correct, col=condition)) +
geom_jitter(width = .1, alpha = .5) +
facet_grid(~age)
# scale age, make sure condition is a factor
joined$condition=as.factor(joined$condition)
joined$age = as.numeric(joined$age)
joined$age_sc = scale(joined$age, scale = FALSE) # center but don't scale age
#
model_lmer <- lmer(avg_sketch_correct ~ age_sc*condition*avg_tracing_rating + (condition | subID) + (condition | category),  data = joined)
model_summary = summary(model_lmer)$coef
kable(model_summary)
#
model_lmer <- lmer(avg_sketch_correct ~ age_sc*condition*avg_tracing_rating + draw_duration_new + num_strokes + mean_intensity  + (condition | subID) + (condition | category),  data = joined)
model_summary = summary(model_lmer)$coef
kable(model_summary)
plot(joined$age,resid(model_lmer))
plot(joined$condition,resid(model_lmer))
classification_data <- read.csv('compiled_classifications/Classification_Outputs1200.csv') %>%
as.tibble() %>%
mutate(category = target_label) %>%
select(-X)
all <- joined %>%
left_join(classification_data)
ggplot(all, aes(x=avg_sketch_correct, y=correct_or_not, col=actual_category)) +
geom_jitter(width=.01, height=.01, alpha=.5) +
facet_wrap(~actual_category) +
geom_smooth() +
xlab('avg human accuracy') +
ylab('classification accuracy')
human_advs <- all %>%
filter(!is.na(correct_or_not)) %>%
mutate(human_adv = avg_sketch_correct - correct_or_not) %>%
group_by(age, actual_category) %>%
multi_boot_standard(col='human_adv')
ggplot(human_advs, aes(x=age, y=mean, col=actual_category)) +
geom_pointrange(aes(ymin = ci_lower, ymax=ci_upper)) +
# geom_jitter(width=.01, height=.01, alpha=.5) +
facet_wrap(~actual_category) +
geom_hline(yintercept=0) +
ylab('human advantage')
ggplot(all, aes(x=avg_sketch_correct, y=target_label_prob, col=actual_category)) +
geom_jitter(width=.01, alpha=.5) +
facet_wrap(~actual_category) +
geom_smooth() +
xlab('avg human accuracy') +
ylab('classification probability')
compare <- all %>%
group_by(session_id,age,condition) %>%
summarize(machine = mean(correct_or_not, na.rm=TRUE), human = mean(avg_sketch_correct))
compare <- gather(compare, value="accuracy", key="which_classifier", machine, human)
compare$which_classifier <- as.factor(compare$which_classifier)
age_by_cond <- compare %>%
filter(!is.na(accuracy)) %>%
group_by(condition,age,which_classifier) %>%
multi_boot_standard(col='accuracy')
ggplot(age_by_cond, aes(x=age, y=mean, col=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.5)) +
facet_wrap(~which_classifier) +
ylab('Recognition Accuracy') +
xlab('Age')
d$actual_category
unique(d$actual_category)
not_practiced = c('hat','rabbit','watch','airplane','bike','chair')
practiced = c('fish','dog','bird','car','house','tree')
cond_by_age_prac <- avg_by_sketch %>%
filter(actual_category %in% not_practiced ) %>%
group_by(subID,condition,age) %>% # group at level of individual subjects/conditions
summarize(avg_sub_by_cond_correct = mean(avg_sketch_correct)) %>% # average over sketch recognition accuracies
group_by(age,condition) %>% # group by age/condition
multi_boot_standard(col='avg_sub_by_cond_correct')
ggplot(cond_by_age_prac, aes(x=age, y=mean, col=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.5))
cond_by_age_prac
not_practiced = c('hat','rabbit','watch','airplane','bike','chair')
practiced = c('fish','dog','bird','car','house','tree')
cond_by_age_prac <- avg_by_sketch %>%
filter(actual_category %in% practiced ) %>%
group_by(subID,condition,age) %>% # group at level of individual subjects/conditions
summarize(avg_sub_by_cond_correct = mean(avg_sketch_correct)) %>% # average over sketch recognition accuracies
group_by(age,condition) %>% # group by age/condition
multi_boot_standard(col='avg_sub_by_cond_correct')
ggplot(cond_by_age_prac, aes(x=age, y=mean, col=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.5))
joined <- joined %>%
mutate(practiced_cat = (actual_cateogry %in% practied))
joined <- joined %>%
mutate(practiced_cat = (actual_category %in% practiced))
model_lmer <- lmer(avg_sketch_correct ~ age_sc*condition*practiced_cat + avg_tracing_rating +  draw_duration_new + num_strokes + mean_intensity  + (condition | subID) + (condition | category),  data = joined)
model_summary = summary(model_lmer)$coef
kable(model_summary)
category_by_cond <- joined %>%
group_by(category, age, condition) %>%
multi_boot_standard(col = 'avg_sketch_correct')
ggplot(category_by_cond,aes(x=age, y=mean, col=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.5)) +
facet_wrap(~category)
tracing
tracing$ord_max
tracing
tracing <- read.csv('tracing_scores/photodraw2_tracing_pred.csv') %>%
mutate(age_numeric = age) %>%
mutate(age = paste0("age",age_numeric)) %>%
mutate(age = as.factor(age))
count_tracers <- read.csv('tracing_scores/photodraw2_tracing_pred.csv') %>%
mutate(age_numeric = age) %>%
mutate(age = paste0("age",age_numeric)) %>%
mutate(age = as.factor(age)) %>%
distinct(session_id,age) %>%
group_by(age) %>%
summarize(count = n())
count_tracers
setwd("~/Documents/GitHub/kiddraw/analysis/photodraw2/5_examine_recognition_data")
## Load tracing data
tracing <- read.csv('tracing_scores/photodraw2_tracing_pred.csv') %>%
mutate(age_numeric = age) %>%
mutate(age = paste0("age",age_numeric)) %>%
mutate(age = as.factor(age))
count_tracers <- read.csv('tracing_scores/photodraw2_tracing_pred.csv') %>%
mutate(age_numeric = age) %>%
mutate(age = paste0("age",age_numeric)) %>%
mutate(age = as.factor(age)) %>%
distinct(session_id,age) %>%
group_by(age) %>%
summarize(count = n())
## Extract relevant statistics
tracing_summary <- tracing %>%
group_by(session_id) %>%
# filter(category == "shape") %>%
summarize(avg_tracing_rating = sum(ord_max)/n()) %>%# use instead of mean because sometimes that errors when we only have one tracing
# mutate(avg_tracing_rating = scale(avg_tracing_rating)) %>%
mutate(session_id = str_split_fixed(session_id, '_', 2)[,2])
## Join into one data frame
joined <- joined %>%
mutate(session_id = as.factor(session_id)) %>%
left_join(tracing_summary, by=c('session_id'))
tracing
tracing_reliability <- tracing %>%
group_by(session_id) %>%
summarize(count_tracings = count())
tracing_reliability <- tracing %>%
group_by(session_id) %>%
summarize(count_tracings = n())
tracing_reliability
tracing_reliability$count_tracings
unique(tracing_reliability$count_tracings)
length(tracing_reliability$count_tracings)
tracing_reliability <- tracing %>%
group_by(session_id) %>%
mutate(count_tracings = n()) %>%
filter(count_tracings < 2)
tracing_reliability
tracing_reliability <- tracing %>%
group_by(session_id) %>%
mutate(count_tracings = n()) %>%
filter(count_tracings > 1)
traicng_rel
tracing_reliability
tracing_reliability$category=="square"
##
both_trials <- tracing %>%
group_by(session_id) %>%
mutate(count_tracings = n()) %>%
filter(count_tracings > 1)
cor.test(both_trials$ord_max[both_trials$category=="square"],both_trials$ord_max[both_trials$category=="shape"])
ggplot(both_trials, aes(x=age, y=ord_max, col=category)) %>%
geom_point()
ggplot(both_trials, aes(x=age, y=ord_max, col=category)) +
geom_point()
ggplot(both_trials, aes(x=age, y=ord_max, col=category)) +
geom_jitter()
both_trails
both_trials
ggplot(both_trials, aes(x=age, y=ord_max, col=category)) +
geom_jitter() +
geom_line()
cor.test(both_trials$ord_max[both_trials$category=="square"],both_trials$ord_max[both_trials$category=="shape"])
ggplot(both_trials, aes(x=age, y=ord_max, col=category)) +
geom_jitter() +
qplot(both_trials$ord_max[both_trials$category=="square"],both_trials$ord_max[both_trials$category=="shape"] )
qqplot(both_trials$ord_max[both_trials$category=="square"],both_trials$ord_max[both_trials$category=="shape"] )
d
d
avg_by_sketch
avg_by_sketch
avg_by_sketch$avg
cor_by_indiv <- avg_by_sketch %>%
group_by(subID) %>%
summarize(sd = sd(avg_sketch_correct),
mean = mean(avg_sketch_correct))
joined <- left_join(joined, cor_by_indiv) %>%
mutate(subID = fct_reorder(subID, mean, .desc=TRUE))
ggplot(joined, aes(x = subID, y = avg_sketch_correct, col = age)) +
geom_jitter(width = .1, alpha = .5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
cor_by_indiv
cor_by_indiv$mean
joined <- left_join(joined, cor_by_indiv) %>%
mutate(subID = fct_reorder(subID, mean, .desc=TRUE))
warnings()
cor_by_indiv <- avg_by_sketch %>%
group_by(subID) %>%
summarize(sd = sd(avg_sketch_correct),
mean = mean(avg_sketch_correct))
joined <- left_join(joined, cor_by_indiv, by='subID') %>%
mutate(subID = fct_reorder(subID, mean, .desc=TRUE))
cor_by_indiv
joined$mean
unique(joined$mean)
joined$age
