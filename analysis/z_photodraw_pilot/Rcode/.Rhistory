## Read in data outputs from turk data - true/false recognition
r <- read.csv("preprocessed_data/photodraw_recognition_ratings.csv") %>%
as.tibble()
## refactor levels to that semantic condition is first, then working memory, then perception
r$condition <- factor(r$condition, levels = c("S", "W", "P"))
d <- read_csv("preprocessed_data/photodraw_data_Aug8.csv") %>%
select(-X1) %>%
filter(!is.na(age)) %>%
mutate(imNameShort = paste0(category, '_sketch', '_', session_id,'_',condition, '_', age,'.png'))
corbyAgeGroup <- r %>%
group_by(sessionId, age_group, condition)%>%
mutate(meanCorrect = mean (correct)) %>%
group_by(sessionId, age_group, condition, meanCorrect)%>%
multi_boot_standard(col="meanCorrect")
r <- r %>%
mutate(age_group = cut(age, c(3.9, 5, 8), labels = c("4-5","6-7")))
corbyAgeGroup <- r %>%
group_by(sessionId, age_group, condition)%>%
mutate(meanCorrect = mean (correct)) %>%
group_by(sessionId, age_group, condition, meanCorrect)%>%
multi_boot_standard(col="meanCorrect")
ggplot(corbyAgeGroup, aes(x = condition, y = mean, col=age_group)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper))
corbyAgeGroup
corbyAgeGroup <- r %>%
group_by(sessionId, age_group, condition)%>%
mutate(meanCorrect = mean (correct)) %>%
distinct(sessionId, age_group, condition, meanCorrect)%>%
group_by(condition, age_group) %>%
multi_boot_standard(col="meanCorrect")
ggplot(corbyAgeGroup, aes(x = condition, y = mean, col=age_group)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper))
library(knitr)
opts_chunk$set(echo = TRUE)
library(tidyverse)
library(assertthat)
library(ggthemes)
library(lme4)
library(langcog)
theme_set(theme_few())
## Read in data outputs from turk data - true/false recognition
r <- read.csv("preprocessed_data/photodraw_recognition_ratings.csv") %>%
as.tibble()
## refactor levels to that semantic condition is first, then working memory, then perception
r$condition <- factor(r$condition, levels = c("S", "W", "P"))
d <- read_csv("preprocessed_data/photodraw_data_Aug8.csv") %>%
select(-X1) %>%
filter(!is.na(age)) %>%
mutate(imNameShort = paste0(category, '_sketch', '_', session_id,'_',condition, '_', age,'.png'))
ratersPerImage <- r %>%
distinct(imageName, workerid) %>%
group_by(imageName) %>%
summarize(count = n())
assert_that(sum(ratersPerImage$count==30)==(length(unique(r$imageName))))
r %>%
distinct(sessionId, condition, age) %>%
group_by(condition) %>%
summarize(count = n()) %>%
kable()
ggplot(d, aes(y = num_strokes)) +
geom_histogram() +
facet_grid(~condition)
ggplot(d, num_strokes) +
geom_histogram() +
facet_grid(~condition)
ggplot(d, aes(num_strokes)) +
geom_histogram() +
facet_grid(~condition)
ggplot(d, aes(num_strokes)) +
geom_histogram(binwidth=10) +
facet_grid(~condition)
ggplot(d, aes(x = condition, y = draw_duration, col=age)) +
geom_jitter(width = .1, alpha = .5)
ggplot(d, aes(x = condition, y = avg_stroke_length, col=age)) +
geom_jitter(width = .1, alpha = .5)
ggplot(d, aes(num_strokes)) +
geom_histogram(binwidth=10) +
facet_grid(~condition)
ggplot(d, aes(num_strokes)) +
geom_histogram(binwidth=2) +
facet_grid(~condition)
ggplot(d, aes(num_strokes)) +
geom_histogram(binwidth=2) +
facet_grid(~condition)
ggplot(d, aes(draw_duration)) +
geom_histogram(binwidth=2) +
facet_grid(~condition)
# ggplot(d, aes(num_strokes)) +
#   geom_histogram(binwidth=2) +
#   facet_grid(~condition)
ggplot(d, aes(draw_duration)) +
geom_histogram(binwidth=2) +
facet_grid(~condition)
corbyChild <- r %>%
group_by(sessionId) %>%
multi_boot_standard(col = "correct")
corbyChild
length(corbyChild_
length(corbyChild)
len(corByChild)
summary(corByChild)
summary(corByChild)
summary(corbyChild)
r
indiv <- left_join(r,corbyChild) %>%
mutate(sessionId = fct_reorder(sessionId, mean, .desc=TRUE))
indiv
indiv <- left_join(r,corbyChild) %>%
distinct(sessionId, mean)
summary(indiv)
indiv <- left_join(corbyChild,r)
indiv
corbyChild <- r %>%
group_by(sessionId) %>%
multi_boot_standard(col = "correct")
## Look at a summary of the data
summary(corbyChild) # check dimensions of
indiv <- left_join(r,corbyChild) %>%
distinct(sessionId, mean) %>%  # get unique combos of sessionId and average recognizability
mutate(sessionId = fct_reorder(sessionId, mean, .desc=TRUE))  # reorder subjects from best to worst
## Plot individual children
ggplot(indiv, aes(x = sessionId, y = mean, col = age)) +
geom_jitter(width = .1, alpha = .5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
corbyChild <- r %>%
group_by(sessionId) %>%
multi_boot_standard(col = "correct")
## Look at a summary of the data
summary(corbyChild) # check dimensions of
indiv <- left_join(r,corbyChild) %>%
distinct(sessionId, mean, age) %>%  # get unique combos of sessionId and average recognizability
mutate(sessionId = fct_reorder(sessionId, mean, .desc=TRUE))  # reorder subjects from best to worst
## Plot individual children
ggplot(indiv, aes(x = sessionId, y = mean, col = age)) +
geom_jitter(width = .1, alpha = .5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
summary(indiv)
library(knitr)
opts_chunk$set(echo = TRUE)
library(tidyverse)
library(assertthat)
library(ggthemes)
library(lme4)
library(langcog)
theme_set(theme_few())
## Read in data outputs from turk data - true/false recognition
r <- read.csv("preprocessed_data/photodraw_recognition_ratings.csv") %>%
as.tibble()
## refactor levels to that semantic condition is first, then working memory, then perception
r$condition <- factor(r$condition, levels = c("S", "W", "P"))
d <- read_csv("preprocessed_data/photodraw_data_Aug8.csv") %>%
select(-X1) %>%
filter(!is.na(age)) %>%
mutate(imNameShort = paste0(category, '_sketch', '_', session_id,'_',condition, '_', age,'.png'))
d <- d %>%
group_by(session_id) %>%
mutate(age_char = strsplit(age,"e")[[1]][2]) %>%
mutate(age_num = as.numeric(age_char)) %>%
select(-age) %>%
rename(age = age_num)
joined <- left_join(r,d)
ratersPerImage <- r %>%
distinct(imageName, workerid) %>%
group_by(imageName) %>%
summarize(count = n())
assert_that(sum(ratersPerImage$count==30)==(length(unique(r$imageName))))
r %>%
distinct(sessionId, condition, age) %>%
group_by(condition) %>%
summarize(count = n()) %>%
kable()
r %>%
distinct(sessionId, condition, age) %>%
group_by(condition,age) %>%
summarize(count = n())
ratingConfusions <- r %>%
group_by(category, rating)  %>%
summarize(number = n()) %>%
group_by(category) %>%
mutate(prop = number / sum(number)) %>%
complete(rating, fill = list(prop = 0))
ggplot(ratingConfusions,
aes(x = rating, y = category, fill = prop)) +
geom_tile() +
ylab("True Category") +
xlab("Rated as") +
scale_fill_gradient(limits = c(0, 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
ggplot(d, aes(num_strokes)) +
geom_histogram(binwidth=2) +
facet_grid(~condition)
ggplot(d, aes(draw_duration)) +
geom_histogram(binwidth=2) +
facet_grid(~condition)
# ggplot(d, aes(num_strokes)) +
#   geom_histogram(binwidth=2) +
#   facet_grid(~condition)
corbyChild <- r %>%
group_by(sessionId) %>%
multi_boot_standard(col = "correct")
## Look at a summary of the data
summary(corbyChild) # check dimensions of
indiv <- left_join(r,corbyChild) %>%
distinct(sessionId, mean, age) %>%  # get unique combos of sessionId and average recognizability
mutate(sessionId = fct_reorder(sessionId, mean, .desc=TRUE))  # reorder subjects from best to worst
## Plot individual children
ggplot(indiv, aes(x = sessionId, y = mean, col = age)) +
geom_jitter(width = .1, alpha = .5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
corbyConditionOnly <- r %>%
group_by(condition) %>%
multi_boot_standard(col = "meanCorrect")
corbyConditionOnly <- r %>%
group_by(condition) %>%
multi_boot_standard(col = "correct")
corbyConditionOnly
corbyConditionOnly <- r %>%
group_by(sessionId,condition) %>%
mutate(meanCorrect = mean(correct))
corbyConditionAndSubID <- r %>%
group_by(sessionId,condition) %>%
mutate(meanCorrect = mean(correct))
corbyConditionAndSubID <- r %>%
group_by(sessionId,condition) %>%
mutate(meanCorrect = mean(correct))
corbyConditionAndSubID
corbyConditionAndSubID$sessionId
corbyConditionAndSubID$sessionId=="e11532111112405"
corbyConditionAndSubID$meanCorrect[corbyConditionAndSubID$sessionId=="e11532111112405"]
r$correct[r$sessionId=="e11532111112405"]
mean(r$correct[r$sessionId=="e11532111112405"])
corbyConditionAndSubID <- r %>%
group_by(sessionId) %>%
mutate(meanCorrect = mean(correct))
View(corbyConditionOnly)
View(corbyChild)
clear corbyConditionAndSubID
corbyConditionAndSubID <- r %>%
group_by(sessionId) %>%
mutate(meanCorrect = mean(correct))
View(corbyConditionAndSubID)
corbyConditionAndSubID <- r %>%
group_by(sessionId) %>%
mutate(meanCorrect = mean(correct))
remove corbyConditionAndSubID
remove(corbyConditionAndSubID)
corbyConditionAndSubID <- r %>%
group_by(sessionId) %>%
mutate(meanCorrect = mean(correct))
corbyConditionAndSubID$meanCorrect[corbyConditionAndSubID$sessionId=="e11532111112405"]
corbyConditionAndSubID <- r %>%
group_by(sessionId) %>%
mutate(meanCorrect = mean(correct)) %>%
distinct(sessionId,meanCorrect, condition)
warnings()
remove(corbyConditionAndSubID)
corbyConditionAndSubID <- r %>%
group_by(sessionId) %>%
mutate(meanCorrect = mean(correct)) %>%
distinct(sessionId,meanCorrect, condition)
corbyConditionAndSubID
corbyConditionAndSubID
corbyConditionAndSubID <- r %>%
group_by(sessionId) %>%
mutate(meanCorrect = mean(correct)) %>%
distinct(sessionId,meanCorrect, condition) %>%
group_by(condition) %>%
multi_boot_standard(col = "meanCorrect")
corbyConditionAndSubID
## Get the percent recognized for each age group / condition
corbyConditionAndSubID <- r %>%
group_by(sessionId) %>%
mutate(meanCorrect = mean(correct)) %>%
distinct(sessionId,meanCorrect, condition) %>%
group_by(condition) %>%
multi_boot_standard(col = "meanCorrect")
ggplot(corbyConditionOnly, aes(x = condition, y = mean, col=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper))
ggplot(corbyConditionAndSubID, aes(x = condition, y = mean, col=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper))
? multi_boot_standard
## Get the percent recognized for each age group / condition
corbyConditionAndSubID <- r %>%
group_by(sessionId) %>%
mutate(meanCorrect = mean(correct)) %>%
distinct(sessionId,meanCorrect, condition) %>%
group_by(condition) %>%
multi_boot_standard(col = "meanCorrect")
ggplot(corbyConditionAndSubID, aes(x = condition, y = mean, col=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper))
corbyChild <- r %>%
group_by(condition,sessionId, age) %>%
mutate(avgCorrect = mean(correct))
ggplot(corbyChild, aes(x = age, y = avgCorrect, col=age)) +
geom_jitter(width = .01, alpha = .5)  +
facet_grid(~condition)
## Get the percent recognized for each age group / condition
corbyCondition <- r %>%
group_by(sessionId) %>% # group by subjects
mutate(meanCorrect=mean(correct)) %>% # calculate mean correct
distinct(sessionId, meanCorrect, age, condition) %>%
group_by(condition,age) %>% # critical step: group by BOTH condition and age
multi_boot_standard(col = "meanCorrect")
ggplot(corbyCondition, aes(x = age, y = mean, col=age)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper)) +
facet_grid(~condition)
## Get the percent recognized for each age group / condition
corbyConditionAndSubID <- r %>%
group_by(sessionId) %>%
mutate(meanCorrect = mean(correct)) %>%
distinct(sessionId,meanCorrect, condition) %>%
group_by(condition) %>%
multi_boot_standard(col = "meanCorrect")
ggplot(corbyConditionAndSubID, aes(x = condition, y = mean, col=condition)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper))
corByItem <- joined %>%
group_by(imNameShort) %>%
mutate(avgCorrect = mean(correct)) %>%
distinct(imNameShort, avgCorrect, draw_duration, num_strokes, avg_stroke_length,age, condition)
warnings()
corbySessionId <- r %>%
group_by(sessionId) %>% # group by subjects
mutate(meanCorrect=mean(correct))
summary(corbySessionId)
corbySessionId <- r %>%
group_by(sessionId) %>% # group by subjects
mutate(meanCorrect=mean(correct)) %>%
distinct(sessionId, category, age, meanCorrect, condition)
summary(corbySessionId)
corbyImage <- r %>%
group_by(sessionId) %>% # group by subjects
mutate(meanCorrect=mean(correct))
corbyImage
corbyImage <- r %>%
group_by(imNameShort) %>% # group by subjects
mutate(meanCorrect=mean(correct)) %>%
distinct(sessionId, category, age, meanCorrect, condition)
corbyImage
indiv <- r
group_by(sessionId) %>%
mutate(sub_correct=mean(correct)) %>%
distinct(sessionId, sub_correct, age) %>%  # get unique combos of sessionId and average recognizability
mutate(sessionId = fct_reorder(sessionId, mean, .desc=TRUE))  # reorder subjects from best to worst
r
r$sessionId
indiv <- r %>%
group_by(sessionId) %>%
mutate(sub_correct=mean(correct)) %>%
distinct(sessionId, sub_correct, age) %>%  # get unique combos of sessionId and average recognizability
mutate(sessionId = fct_reorder(sessionId, mean, .desc=TRUE))  # reorder subjects from best to worst
indiv <- r %>%
group_by(sessionId) %>%
mutate(sub_correct=mean(correct)) %>%
distinct(sessionId, sub_correct, age) %>%  # get unique combos of sessionId and average recognizability
ungroup() %>%
mutate(sessionId = fct_reorder(sessionId, mean, .desc=TRUE))  # reorder subjects from best to worst
indiv <- r %>%
group_by(sessionId) %>%
mutate(sub_correct=mean(correct)) %>%
distinct(sessionId, sub_correct, age)
indiv
indiv <- r %>%
group_by(sessionId) %>%
mutate(sub_correct=mean(correct)) %>%
distinct(sessionId, sub_correct, age) # get unique combos of sessionId and average recognizability
indiv_plot <- indiv %>%
mutate(sessionId = fct_reorder(sessionId, mean, .desc=TRUE))  # reorder subjects from best to worst
indiv_plot <- indiv %>%
ungroup(sessionId) %>%
mutate(sessionId = fct_reorder(sessionId, mean, .desc=TRUE))  # reorder subjects from best to worst
indiv
indiv$sessionId
indiv_plot <- indiv %>%
ungroup(sessionId) %>%
mutate(sessionId = fct_reorder(sessionId, sub_correct, .desc=TRUE))  # reorder subjects from best to worst
indiv_plot
library(knitr)
opts_chunk$set(echo = TRUE)
library(tidyverse)
library(assertthat)
library(ggthemes)
library(lme4)
library(langcog)
theme_set(theme_few())
## Read in data outputs from turk data - true/false recognition
r <- read.csv("preprocessed_data/photodraw_recognition_ratings.csv") %>%
as.tibble()
## refactor levels to that semantic condition is first, then working memory, then perception
r$condition <- factor(r$condition, levels = c("S", "W", "P"))
d <- read_csv("preprocessed_data/photodraw_data_Aug8.csv") %>%
select(-X1) %>%
filter(!is.na(age)) %>%
mutate(imNameShort = paste0(category, '_sketch', '_', session_id,'_',condition, '_', age,'.png'))
d <- d %>%
group_by(session_id) %>%
mutate(age_char = strsplit(age,"e")[[1]][2]) %>%
mutate(age_num = as.numeric(age_char)) %>%
select(-age) %>%
rename(age = age_num)
joined <- left_join(r,d)
corbyImage <- r %>%
group_by(imNameShort) %>% # group by subjects
mutate(image_correct=mean(correct)) %>%
distinct(sessionId, category, age, meanCorrect, condition)
corbyImage <- r %>%
group_by(imNameShort) %>% # group by subjects
mutate(image_correct=mean(correct)) %>%
distinct(sessionId, category, age, image_correct, condition)
corbyImage
indiv <- r %>%
group_by(sessionId) %>%
mutate(sub_correct = mean(correct)) %>%
distinct(sessionId, sub_correct, age)
indiv
r$correct
mean(r$correct)
corbyImage <- r %>%
group_by(imNameShort) %>% # group by subjects
mutate(image_correct = mean(correct))
corbyIamge
r
r
corbyImage <- r %>%
group_by(imNameShort) %>% # group by subjects
mutate(image_correct = std(correct))
corbyImage <- r %>%
group_by(imNameShort) %>% # group by subjects
mutate(image_correct = median(correct))
correctByImage <- r %>%
group_by(imNameShort) %>% # group by subjects
mutate(image_correct = mean(correct)) %>%
distinct(sessionId, category, age, image_correct, condition)
correctByImage
correctByImage
indiv
## Get proportion recognized for each image
correctByImage <- r %>%
group_by(imNameShort) %>% # group by subjects
mutate(image_correct = mean(correct)) %>%
distinct(sessionId, category, age, image_correct, condition)
## Get proportion recognized for each participant
indiv <- r %>%
group_by(sessionId) %>%
mutate(sub_correct = mean(correct)) %>%
distinct(sessionId, sub_correct, age) # get unique combos of sessionId and average recognizability
# indiv_plot <- indiv %>%
#   ungroup(sessionId) %>%
#   mutate(sessionId = fct_reorder(sessionId, sub_correct, .desc=TRUE))  # reorder subjects from best to worst
## Plot individual children
ggplot(indiv, aes(x = sessionId, y = mean, col = age)) +
geom_jitter(width = .1, alpha = .5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
## Get proportion recognized for each image
correctByImage <- r %>%
group_by(imNameShort) %>% # group by subjects
mutate(image_correct = mean(correct)) %>%
distinct(sessionId, category, age, image_correct, condition)
## Get proportion recognized for each participant
indiv <- r %>%
group_by(sessionId) %>%
mutate(sub_correct = mean(correct)) %>%
distinct(sessionId, sub_correct, age) # get unique combos of sessionId and average recognizability
# indiv_plot <- indiv %>%
#   ungroup(sessionId) %>%
#   mutate(sessionId = fct_reorder(sessionId, sub_correct, .desc=TRUE))  # reorder subjects from best to worst
## Plot individual children
ggplot(indiv, aes(x = sessionId, y = sub_correct, col = age)) +
geom_jitter(width = .1, alpha = .5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
correctByImage <- r %>%
group_by(imNameShort) %>% # group by subjects
mutate(image_correct = mean(correct)) %>%
distinct(sessionId, category, age, image_correct, condition)
library(tidyverse)
## Read in data outputs from turk data - true/false recognition
r <- read.csv("preprocessed_data/photodraw_recognition_ratings.csv") %>%
as.tibble()
## refactor levels to that semantic condition is first, then working memory, then perception
r$condition <- factor(r$condition, levels = c("S", "W", "P"))
d <- read_csv("preprocessed_data/photodraw_data_Aug8.csv") %>%
select(-X1) %>%
filter(!is.na(age)) %>%
mutate(imNameShort = paste0(category, '_sketch', '_', session_id,'_',condition, '_', age,'.png'))
d <- d %>%
group_by(session_id) %>%
mutate(age_char = strsplit(age,"e")[[1]][2]) %>%
mutate(age_num = as.numeric(age_char)) %>%
select(-age) %>%
rename(age = age_num)
joined <- left_join(r,d)
ratersPerImage <- r %>%
distinct(imageName, workerid) %>%
group_by(imageName) %>%
summarize(count = n())
assert_that(sum(ratersPerImage$count==30)==(length(unique(r$imageName))))
library(knitr)
opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggthemes)
library(lme4)
library(langcog)
library(assertthat)
theme_set(theme_few())
## Read in data outputs from turk data - true/false recognition
r <- read.csv("preprocessed_data/photodraw_recognition_ratings.csv") %>%
as.tibble()
## refactor levels to that semantic condition is first, then working memory, then perception
r$condition <- factor(r$condition, levels = c("S", "W", "P"))
d <- read_csv("preprocessed_data/photodraw_data_Aug8.csv") %>%
select(-X1) %>%
filter(!is.na(age)) %>%
mutate(imNameShort = paste0(category, '_sketch', '_', session_id,'_',condition, '_', age,'.png'))
